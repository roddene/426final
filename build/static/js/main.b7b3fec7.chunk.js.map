{"version":3,"sources":["Song.jsx","Playlist.jsx","Playlistlist.jsx","InputField.jsx","Autocomplete.jsx","SongSearcher.jsx","PlaylistSelector.jsx","Player.jsx","Controller.jsx","SubmitButton.jsx","LoginForm.jsx","RegisterForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Song","props","state","className","class","this","name","artist","Math","floor","duration","toLocaleString","minimumIntegerDigits","useGrouping","onClick","playHandler","id","deleteHandler","playlistId","React","Component","Playlist","playSong","playSongHandler","owner","songs","songCount","length","componentWillReceiveProps","bind","deleteSong","nextProps","setState","songId","a","fetch","method","headers","body","JSON","stringify","token","localStorage","getItem","videoId","then","res","json","console","log","filtered","filter","item","count","clearPlaylist","map","song","songName","Playlistlist","playlists","playlist","_id","selectPlaylist","deletePlaylist","InputField","type","placeholder","value","onChange","e","target","Autocomplete","suggestions","userInput","currentTarget","updateSuggest","filteredSuggestions","activeSuggestion","showSuggestions","innerText","onKeyDown","keyCode","inputVal","youtubeSearch","query","result","addSong","split","suggestionsListComponent","suggestion","index","SongSearcher","possibleSongs","showing","updateSpotifyResults","val","status","setTimeout","el","artistName","PlaylistSelector","isActive","updateNewPlaylist","newPlaylistName","username","playlistName","playlistOwner","addNewPlaylist","updatePlaylistlist","changePlaylist","newplay","Player","componentDidMount","myTimer","componentWillUnmount","clearInterval","setInterval","isPlaying","curTime","videoOnReady","event","player","totalTime","getDuration","playVideo","pauseVideo","updateProgress","round","getCurrentTime","endVideo","repeat","seekTo","nextSong","changeRepeat","changeShuffle","isShuffling","rand","random","videoCode","newSong","find","i","indexLookup","changeTime","nativeEvent","offsetX","opts","playerVars","autoplay","loop","max","containerClassName","onReady","onStateChange","onEnd","Controller","SubmitButton","disabled","LoginForm","password","buttonDisabled","property","trim","updateState","data","setItem","resetForm","error","setInputValue","login","RegisterForm","alert","register","App","logout","isLoggedIn","observer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7b3fec7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Song extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n      }  \r\n    }\r\n    render(){\r\n  return (\r\n    <div className=\"Song\">\r\n      <div class = \"song\"></div>\r\n      <h4 class =\"songcomponent\">{this.props.name}</h4> \r\n      <h4 class =\"songcomponent\">{this.props.artist}</h4>\r\n      <h4 class = \"songcomponent\">{Math.floor(this.props.duration / 60)}:{(this.props.duration % 60).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}</h4>\r\n      <button class =\"songcomponent\" onClick = {() =>this.props.playHandler(this.props.id,this.props.name,this.props.artist,this.props.duration)}>Play</button>\r\n      <button class =\"songcomponent\" onClick = {() =>this.props.deleteHandler(this.props.id,this.props.playlistId)}>Remove</button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Song;\r\n\r\n\r\n","import React from 'react';\r\nimport Song from './Song';\r\n\r\n\r\nclass Playlist extends React.Component {\r\n  constructor(props){\r\n    super(props); \r\n    this.state = {\r\n    name:props.name,\r\n    owner:props.owner,\r\n    songs:props.songs,\r\n    songCount:props.songs.length\r\n\r\n    \r\n  }\r\n  \r\n  this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\r\n  this.deleteSong = this.deleteSong.bind(this);\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n  this.setState({ songs:nextProps.songs,\r\n    songCount:nextProps.songs.length\r\n  })\r\n}\r\n\r\n  \r\n playSong = (id,name,artist,duration) => {\r\n  this.props.playSongHandler(id,name,artist,duration);\r\n }\r\n\r\n\r\n  async deleteSong (songId,playlistId) {\r\n    try{\r\n      const result = await fetch('/api/deleteSong',{\r\n        method: 'POST',\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            token:localStorage.getItem('token'),\r\n            videoId:songId,\r\n            playlistId,playlistId\r\n        })\r\n       \r\n    }).then((res)=>res.json())\r\n    } catch(e){\r\n      console.log(e);\r\n    }\r\n    let filtered = this.state.songs.filter(function(item){\r\n      return item.id !=songId\r\n    })\r\n    const count = filtered.length;\r\n    this.setState((state)=>({\r\n      songs:filtered,\r\n      songCount:count\r\n    }))\r\n  }\r\n\r\n  \r\n\r\n  render(){\r\n  return (\r\n    <div className=\"playlist\">\r\n      <h2>{this.state.name}</h2>\r\n      \r\n      <button onClick = {() =>this.props.clearPlaylist()}>Go to all playlists</button>\r\n      {this.state.songCount ? this.state.songs.map(song=>{\r\n        const {songName,artist,id,duration} = song;\r\n        return(\r\n      <Song name = {songName} artist = {artist} id ={id} playlistId = {this.props.playlistId} duration = {duration} deleteHandler = {this.deleteSong} playHandler = {this.playSong}/>\r\n      )}) : <p>Playlist Empty</p>\r\n      }\r\n    </div>\r\n  );\r\n  }\r\n}\r\nexport default Playlist;\r\n","import React from 'react';\r\n\r\nclass Playlistlist extends React.Component {\r\n    constructor(props){\r\n      super(props);  \r\n          this.state = {\r\n          \r\n          }\r\n        }\r\n\r\n        render(){\r\n    return (\r\n      <div className=\"playlistlist\">\r\n         {this.props.playlists.map(playlist=>{\r\n        const {name,owner,_id} = playlist;\r\n        return(\r\n      <div class=\"playlistinfo\">\r\n          <h5 class = \"playlistinfodata\">{name}</h5>\r\n          <h5 class = \"playlistinfodata\">{owner}</h5>\r\n          <button class = \"playlistinfodata\" onClick = {() => this.props.selectPlaylist(name,owner,_id) }>Open</button>\r\n          <button class = \"playlistinfodta\" onClick = {()=>this.props.deletePlaylist(_id)}>Delete</button>\r\n      </div>\r\n      )})\r\n      }\r\n      </div>\r\n    );\r\n  \r\n\r\n\r\n      \r\n  }\r\n    \r\n  }\r\n  \r\n  export default Playlistlist;","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n      }  \r\n    }\r\n    render(){\r\n  return (\r\n    <div className=\"inputfield\">\r\n      <input\r\n      type = {this.props.type}\r\n      placeholder = {this.props.placeholder}\r\n      value = {this.props.value}\r\n      onChange = {(e) => this.props.onChange(e.target.value)}/>\r\n    \r\n      \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default InputField;","import React, { Component, Fragment } from \"react\";\r\n\r\nclass Autocomplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // The active selection's index\r\n            activeSuggestion: 0,\r\n            // The suggestions that match the user's input\r\n            filteredSuggestions: props.suggestions,\r\n            // Whether or not the suggestion list is shown\r\n            showSuggestions: true,\r\n            // What the user has entered\r\n            userInput: props.inputVal\r\n        };\r\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\r\n        this.youtubeSearch = this.youtubeSearch.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ filteredSuggestions: nextProps.suggestions })\r\n    }\r\n\r\n    async youtubeSearch() {\r\n        console.log(\"activenum\",this.state.activeSuggestion)\r\n        console.log(this.state.filteredSuggestions);\r\n        console.log(this.state.userInput, \" === \",this.state.filteredSuggestions[this.state.activeSuggestion])\r\n        \r\n        if (this.state.userInput){\r\n            try {\r\n                const result = await fetch('/api/youtubeSearch', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        token: localStorage.getItem('token'),\r\n                        query: this.state.userInput\r\n                    })\r\n                }).then((res) => res.json())\r\n                this.props.addSong(this.state.userInput.split(';'),result.videoId,result.duration);\r\n\r\n\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }else{\r\n            console.log(\"song could not be added, invalid input\");\r\n        }\r\n    \r\n    }\r\n\r\n    onChange = e => {\r\n        const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n        this.props.updateSuggest(userInput);\r\n\r\n        const filteredSuggestions = suggestions\r\n\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions,\r\n            showSuggestions: true,\r\n            userInput: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    onClick = e => {\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n            userInput: e.currentTarget.innerText\r\n        });\r\n    };\r\n\r\n    onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n        // User pressed the enter key\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                activeSuggestion: 0,\r\n                showSuggestions: false,\r\n                userInput: filteredSuggestions[activeSuggestion]\r\n            });\r\n\r\n\r\n        }\r\n        // User pressed the up arrow\r\n        else if (e.keyCode === 38) {\r\n            if (activeSuggestion === 0) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n        }\r\n        // User pressed the down arrow\r\n        else if (e.keyCode === 40) {\r\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const {\r\n            onChange,\r\n            onClick,\r\n            onKeyDown,\r\n            state: {\r\n                activeSuggestion,\r\n                filteredSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n\r\n                suggestionsListComponent = (\r\n                    <ul class=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                            let className;\r\n\r\n                            // Flag the active suggestion with a class\r\n                            if (index === activeSuggestion) {\r\n                                className = \"suggestion-active\";\r\n                            }\r\n\r\n                            return (\r\n                                <li className={className} key={suggestion} onClick={onClick}>\r\n                                    {suggestion}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <div class=\"no-suggestions\">\r\n                        <em>No suggestions, you're on your own!</em>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"autocomplete\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Add a Song!'\r\n                    onChange={onChange}\r\n                    onKeyDown={onKeyDown}\r\n                    value={userInput}\r\n                />\r\n                <button onClick={() => this.youtubeSearch()}>Add Song</button>\r\n                {suggestionsListComponent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport AutoComplete from './Autocomplete'\r\n\r\nclass SongSearcher extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputVal: '',\r\n      possibleSongs:[],\r\n      showSuggestions:false,\r\n      songCount:0,\r\n      showing:true\r\n    }\r\n    this.updateSpotifyResults = this.updateSpotifyResults.bind(this);\r\n  }\r\n\r\n  async updateSpotifyResults(val) {\r\n    console.log(\"searching\");\r\n    this.setState((state) => ({\r\n      inputVal: val\r\n    }));\r\n    \r\n    const result = await fetch('/api/spotifySearch', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        token: localStorage.getItem('token'),\r\n        query: val\r\n      })\r\n    }).then((res) => res.json())\r\n    if(result.status!='error'){\r\n    this.setState((state) => ({\r\n      possibleSongs:result,\r\n      songCount:result.length,\r\n      inputVal:val\r\n    }));\r\n\r\n    setTimeout(this.setState({\r\n      showing:true,\r\n      possibleSongs:result,\r\n      inputVal:val\r\n  }),500);\r\n\r\n  }\r\n\r\n  }\r\n\r\n  addSong =(index,videoId,duration) =>{\r\n    this.props.addSong(index[0],index[1],duration,videoId)\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div className=\"songsearcher\">\r\n\r\n        <Autocomplete addSong= {this.addSong} suggestions = {this.state.possibleSongs.map((el)=>{\r\n          return el.songName + ';' +el.artistName\r\n        })} updateSuggest = {this.updateSpotifyResults} inputVal ={this.state.inputVal}/>\r\n        \r\n\r\n      </div>\r\n    );\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default SongSearcher;","import React from 'react';\r\nimport Playlist from'./Playlist';\r\nimport Playlistlist from './Playlistlist';\r\nimport InputField from './InputField';\r\nimport SongSearcher from './SongSearcher';\r\n\r\nclass PlaylistSelector extends React.Component {\r\n    constructor(props){\r\n      super(props);  \r\n          this.state = {\r\n            username:this.props.username,\r\n            playlistName :'playlistnam',\r\n            playlistOwner:'ownn',\r\n            playlistId:\"playlist idenetification\",\r\n            newPlaylistName :'',\r\n            songs:[],\r\n            isActive:false,\r\n            playlists:[                \r\n            ]\r\n          }\r\n          this.addNewPlaylist = this.addNewPlaylist.bind(this);\r\n          this.updatePlaylistlist = this.updatePlaylistlist.bind(this);\r\n          this.selectPlaylist = this.selectPlaylist.bind(this);\r\n          this.addSong = this.addSong.bind(this);\r\n          this.deletePlaylist = this.deletePlaylist.bind(this)\r\n        }\r\n        componentDidMount(){//get playlists\r\n            this.updatePlaylistlist();\r\n        }\r\n\r\n        async updatePlaylistlist(){\r\n            const token = localStorage.getItem('token');\r\n            const username =this.props.username;\r\n            const result = await fetch('/api/getPlaylists',{\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    token,\r\n                    username,\r\n                })\r\n            }).then((res)=>res.json())\r\n            this.setState((state)=>({\r\n                playlists:result\r\n            }));\r\n        }\r\n\r\n  \r\n        clearPlaylist = () =>{\r\n            this.setState((state)=>({\r\n                isActive:false\r\n            }));\r\n        }\r\n\r\n        async selectPlaylist (name,owner,id) {\r\n            const token = localStorage.getItem('token');\r\n\r\n            console.log(\"selected\");\r\n            console.log(id);\r\n            this.setState((state)=>({\r\n                isActive:true,\r\n                playlistName:name,\r\n                owner:owner,\r\n                playlistId:id\r\n            }));\r\n            const result = await fetch('/api/selectPlaylist',{\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    token,\r\n                    id\r\n                })\r\n            }).then((res)=>res.json())\r\n            console.log(result);\r\n            this.setState((state)=>({\r\n                songs:result\r\n            }));\r\n            this.props.changePlaylist(result);\r\n            console.log(\"this.state.songs\",this.state.songs);\r\n\r\n\r\n\r\n\r\n\r\n            //update song array\r\n        }\r\n\r\n        async deletePlaylist(playlistId){\r\n            const result = await fetch('/api/deletePlaylist',{\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    token :localStorage.getItem('token'),\r\n                    id:playlistId\r\n                })\r\n            }).then((res)=>res.json())\r\n            this.updatePlaylistlist();\r\n            this.selectPlaylist(this.state.playlistName,this.state.playlistOwner,this.state.playlistId);\r\n\r\n        }\r\n\r\n        updateNewPlaylist = (val) =>{\r\n            this.setState((state)=>({\r\n                newPlaylistName:val\r\n            }))\r\n            \r\n        }\r\n\r\n        async addNewPlaylist(){\r\n            const newplay = this.state.newPlaylistName;\r\n            const username = this.state.username;\r\n            const token = this.props.token;\r\n            console.log(\"newplay\",newplay)\r\n            const result = await fetch('/api/createPlaylist',{\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    token,\r\n                    username,\r\n                    newplay\r\n                })\r\n            }).then((res)=>res.json())\r\n            this.updatePlaylistlist();\r\n        }\r\n\r\n\r\n\r\n        async addSong (songName,artist,duration,videoId){\r\n            console.log('add to playlist ',this.state.playlistId);\r\n            const token = localStorage.getItem('token');\r\n            \r\n            const result = await fetch('/api/addSong',{\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    token,songName,artist,duration,videoId,playlistId:this.state.playlistId\r\n                })\r\n            }).then((res)=>res.json())\r\n\r\n            \r\n            this.selectPlaylist(this.state.playlistName,this.state.playlistOwner,this.state.playlistId);\r\n\r\n          }\r\n\r\n\r\n\r\n        render(){\r\n            if(this.state.isActive){\r\n                \r\n    return (\r\n      <div className=\"playlistselector\">\r\n          <SongSearcher addSong = {this.addSong}/>\r\n         \r\n          <Playlist name = {this.state.playlistName} playlistId = {this.state.playlistId} owner = {this.state.owner} songs = {this.state.songs} playSongHandler ={this.props.playSongHandler} clearPlaylist = {this.clearPlaylist}/>\r\n      </div>\r\n    );\r\n  }else{\r\n      return(\r\n    <div className=\"playlistselector\">\r\n        <button onClick = {this.addNewPlaylist}>Add Playlist</button>\r\n        \r\n\r\n        <InputField\r\n      type = 'text'\r\n      placeholder = 'name'\r\n      value ={this.state.newPlaylistName ? this.state.newPlaylistName :''}\r\n      onChange = {(val) => this.updateNewPlaylist(val)}\r\n      />\r\n\r\n        <Playlistlist playlists ={this.state.playlists} selectPlaylist = {this.selectPlaylist} deletePlaylist = {this.deletePlaylist}/>\r\n    </div>\r\n\r\n      )\r\n  }\r\n    }\r\n  }\r\n  \r\n  export default PlaylistSelector;","import './App.css';\r\nimport React from 'react';\r\nimport Youtube from \"react-youtube\";\r\n\r\n\r\n\r\n\r\nclass Player extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n\r\n            videoCode: props.videoCode,\r\n            curTime: 0,\r\n            totalTime: props.duration,\r\n            repeat: false,\r\n            player: '',\r\n            isPlaying: false,\r\n            isShuffling: false,\r\n            song: props.song,\r\n            artist: props.artist,\r\n            playlist: props.playlist,//playlist\r\n            opts: {\r\n                playerVars: {\r\n                    // https://developers.google.com/youtube/player_parameters\r\n                    autoplay: 0,\r\n                    loop: true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log('player will recieve');\r\n        this.setState({ playlist:nextProps.playlist,\r\n            videoCode:nextProps.videoCode,\r\n            artist:nextProps.artist,\r\n            song:nextProps.song,\r\n            duration:nextProps.duration\r\n        })\r\n      }\r\n      \r\n\r\n    componentDidMount = () => {\r\n        this.myTimer();\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.myTimer);\r\n    }\r\n\r\n    myTimer = () => {\r\n        setInterval(() => {\r\n            if (this.state.isPlaying) {\r\n\r\n\r\n                this.setState((state) => ({\r\n                    curTime: state.curTime + 1\r\n                }));\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n\r\n\r\n    videoOnReady = (event) => {\r\n        console.log(\"ready\");\r\n        this.setState((state) => ({\r\n            player: event.target,\r\n            totalTime: event.target.getDuration()\r\n        }));\r\n    }\r\n    playVideo = (event) => {\r\n        this.state.player.playVideo();\r\n        this.setState((state) => ({\r\n            isPlaying: true,\r\n            totalTime: this.state.player.getDuration()\r\n\r\n        }));\r\n    }\r\n    pauseVideo = (event) => {\r\n        this.state.player.pauseVideo();\r\n        this.setState((state) => ({\r\n            isPlaying: false\r\n        }));\r\n    }\r\n    updateProgress = (event) => {\r\n        this.setState((state) => ({\r\n            curTime: Math.round(event.target.getCurrentTime()),\r\n        }));\r\n        if (this.state.isPlaying) {\r\n            this.playVideo();\r\n        }\r\n    }\r\n    endVideo = (event) => {\r\n        if (this.state.repeat) {\r\n            this.state.player.seekTo(0, false);\r\n            this.playVideo();\r\n        } else {\r\n            this.nextSong();\r\n        }\r\n    }\r\n    changeRepeat = (event) => {\r\n        console.log(!this.state.repeat);\r\n        this.setState((state) => ({\r\n            repeat: !this.state.repeat\r\n        }));\r\n    }\r\n    changeShuffle = (event) => {\r\n        this.setState((state) => ({\r\n            isShuffling: !this.state.isShuffling\r\n        }));\r\n    }\r\n    nextSong = (event) => {\r\n        if (this.state.playlist.length > 1) {\r\n            if (this.state.isShuffling) {\r\n                let rand = Math.floor(Math.random() * this.state.playlist.length);\r\n                while (this.state.playlist[rand].id==this.state.videoCode){\r\n                    rand = Math.floor(Math.random() * this.state.playlist.length);\r\n                }\r\n                const newSong = this.state.playlist[rand];\r\n                this.setState((state) => ({\r\n                   song:newSong.songName,\r\n                   artist:newSong.artist,\r\n                   videoCode:newSong.id,\r\n                   duration:newSong.duration\r\n                }));\r\n                console.log(\"now playing\",this.state.song)\r\n\r\n        } else {\r\n                let total = this.state.playlist.length;\r\n                \r\n                    let index = -1;\r\n                    let val = this.state.videoCode;\r\n                let filteredObj = this.state.playlist.find(function(item,i){\r\n                    if(item.id===val){\r\n                        index =i;\r\n                        return i;\r\n                    }\r\n                })\r\n                console.log(\"index\",index)\r\n\r\n                let indexLookup = 0;\r\n                if(index !== this.state.playlist.length-1){\r\n                    indexLookup = index+1;\r\n                }\r\n                const newSong = this.state.playlist[indexLookup];\r\n                this.setState((state) => ({\r\n                   song:newSong.songName,\r\n                   artist:newSong.artist,\r\n                   videoCode:newSong.id,\r\n                   duration:newSong.duration\r\n                }));\r\n            console.log(\"now playing shuffle\",this.state.song)\r\n            }\r\n        } else{\r\n            this.pauseVideo();\r\n        }\r\n    \r\n    }\r\n\r\n    changeTime = (event) => {\r\n        console.log(Math.floor(this.state.totalTime * event.nativeEvent.offsetX / 240));\r\n        this.state.player.seekTo(Math.floor(this.state.totalTime * event.nativeEvent.offsetX / 240))\r\n        this.setState((state) => ({\r\n            curTime: Math.floor(this.state.totalTime * event.nativeEvent.offsetX / 240)\r\n        }))\r\n        //this.updateProgress();\r\n\r\n    }//240 is width of progressbar\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Player\">\r\n                <button onClick={this.playVideo}>Play</button>\r\n                <button onClick={this.pauseVideo}>Pause</button>\r\n                <button onClick={this.changeRepeat}>Repeat</button>\r\n                <button onClick={this.nextSong}>Next</button>\r\n                <button onClick={this.changeShuffle}>Shuffle</button>\r\n\r\n                <div>\r\n                    <div id=\"progress\" >\r\n                        <p class=\"timedisplay\">{Math.floor(this.state.curTime / 60)}:{(this.state.curTime % 60).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}</p>\r\n                        <div id=\"progressbardiv\" onClick={this.changeTime}><progress id=\"progressbar\" value={this.state.curTime} max={this.props.duration} ></progress></div>\r\n                        <p class=\"timedisplay\">{Math.floor(this.state.duration / 60)}:{(this.state.duration % 60).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}</p>\r\n                    </div>\r\n                    <div id=\"currentsonginfo\">\r\n                        <p>{this.state.song} - {this.state.artist}</p>\r\n                    </div>\r\n                    <Youtube\r\n                        videoId={this.state.videoCode}\r\n                        playlist={this.state.videoCode}\r\n                        containerClassName=\"embed\"\r\n                        opts={this.state.opts}\r\n                        onReady={(e) => this.videoOnReady(e)}\r\n                        onStateChange={(e) => this.updateProgress(e)}\r\n                        onEnd={(e) => this.endVideo(e)}\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport PlaylistSelector from './PlaylistSelector';\r\nimport Player from './Player';\r\n\r\n\r\n\r\nclass Controller extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      videoCode: \"dQw4w9WgXcQ\",\r\n      artist: \"Playlist\",\r\n      song: \"Choose a\",\r\n      duration: 212,\r\n      songs:[]\r\n    }\r\n  }\r\n\r\n  \r\n changePlaylist = (songs) =>{\r\n   console.log(\"change playlist\");\r\n  this.setState((state) => ({\r\n    songs:songs\r\n  }));\r\n }\r\n\r\n  playSong = (id, name, artist, duration) => {\r\n    console.log(duration);\r\n    console.log(this.state);\r\n    this.setState((state) => ({\r\n      videoCode: id,\r\n      artist: artist,\r\n      song: name,\r\n      duration: duration\r\n    }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Controller\">\r\n\r\n        <Player videoCode={this.state.videoCode} artist={this.state.artist} song={this.state.song} duration={this.state.duration} playlist = {this.state.songs}/>\r\n        <PlaylistSelector playSongHandler={this.playSong} token={this.props.token} username={this.props.username} changePlaylist = {this.changePlaylist} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controller;\r\n","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }  \r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"submitbutton\">\r\n                <button disabled = {this.props.disabled} onClick = {()=>this.props.onClick()}>{this.props.name}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          username:'',\r\n          password:'',\r\n          buttonDisabled:false\r\n      }  \r\n    }\r\n\r\n    setInputValue(property,val){\r\n        val = val.trim();\r\n        if(val.length >20){\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]:val\r\n        })\r\n    }\r\n    resetForm(){\r\n        this.setState({\r\n            username:'',\r\n            password:'',\r\n            buttonDisabled:false\r\n        })\r\n    }\r\n\r\n    async login(){\r\n        if(!this.state.username||!this.state.password){\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled:true\r\n        })\r\n        try{\r\n            const result = await fetch('/api/login',{\r\n                method:'POST',\r\n                headers:{\r\n                  'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({\r\n                    username:this.state.username,\r\n                    password:this.state.password\r\n                })\r\n              }).then((res)=>res.json());\r\n              if(result.status === 'ok'){\r\n                  console.log(\"okay\");\r\n                  this.props.updateState(this.state.username,result.data,true);\r\n                  localStorage.setItem('token',result.data);\r\n                  console.log(\"resultdata\",result.data);\r\n              }else if (result.status === 'error'){\r\n                  console.log(\"error return\")\r\n                  this.resetForm();\r\n                  console.log(result.error);\r\n              } \r\n\r\n\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled:false\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n  return (\r\n    <div className=\"loginform\">\r\n      Log in \r\n      <InputField\r\n      type = 'text'\r\n      placeholder = 'username'\r\n      value ={this.state.username ? this.state.username :''}\r\n      onChange = {(val) => this.setInputValue('username',val)}\r\n      />\r\n\r\n    <InputField\r\n      type = 'password'\r\n      placeholder = 'password'\r\n      value ={this.state.password ? this.state.password :''}\r\n      onChange = {(val) => this.setInputValue('password',val)}\r\n      />\r\n      <SubmitButton\r\n      name = 'Login'\r\n      disabled = {this.state.buttonDisabled}\r\n      onClick = {()=> this.login()}\r\n      />\r\n    \r\n      \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\n\r\n\r\nclass RegisterForm extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          username:'',\r\n          password:'',\r\n          buttonDisabled:false\r\n      }  \r\n    }\r\n\r\n    setInputValue(property,val){\r\n        val = val.trim();\r\n        if(val.length >20){\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]:val\r\n        })\r\n    }\r\n    resetForm(){\r\n        this.setState({\r\n            username:'',\r\n            password:'',\r\n            buttonDisabled:false\r\n        })\r\n    }\r\n\r\n    async register(){\r\n        if(!this.state.username||!this.state.password){\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled:true\r\n        })\r\n        try{\r\n\r\n            const result = await fetch('/api/register',{\r\n                method:'POST',\r\n                headers:{\r\n                  'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({\r\n                    username:this.state.username,\r\n                    password:this.state.password\r\n                })\r\n              }).then((res)=>res.json());\r\n              if(result.status === 'ok'){\r\n               alert(\"Registration successful!\")\r\n\r\n              }else if (result.status === 'error'){\r\n                  alert(\"Error Registering\")\r\n                  this.resetForm();\r\n              } \r\n\r\n\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled:false\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n  return (\r\n    <div className=\"registerform\">\r\n      Log in \r\n      <InputField\r\n      type = 'text'\r\n      placeholder = 'username'\r\n      value ={this.state.username ? this.state.username :''}\r\n      onChange = {(val) => this.setInputValue('username',val)}\r\n      />\r\n\r\n    <InputField\r\n      type = 'password'\r\n      placeholder = 'password'\r\n      value ={this.state.password ? this.state.password :''}\r\n      onChange = {(val) => this.setInputValue('password',val)}\r\n      />\r\n      <SubmitButton\r\n      name = 'Register'\r\n      disabled = {this.state.buttonDisabled}\r\n      onClick = {()=> this.register()}\r\n      />\r\n    \r\n      \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\nimport './App.css';\nimport Controller from './Controller';\nimport LoginForm from './LoginForm'\nimport SubmitButton from './SubmitButton';\nimport {observer} from 'mobx-react';\nimport RegisterForm from './RegisterForm'\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      token:'',\n      isLoggedIn:false,\n      username:'username'\n    }  \n  }\n\n  async componentDidMount() {\n    \n    this.setState((state)=>({\n      token:localStorage.getItem('token')\n  }));\n  const result = await fetch('/api/home',{\n    method: 'POST',\n    headers:{\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        token:localStorage.getItem('token')\n    })\n}).then((res)=>res.json())\n  console.log(result);\n\n\n  }\n\n  logout = () =>{\n    localStorage.setItem('token','');\n    this.setState((state)=>({\n      token:'',\n      isLoggedIn:false,\n      username:''\n  }));\n  }\n\n\n updateState = (username,token,isLoggedIn) =>{\n  this.setState((state)=>({\n    token:token,\n    username:username,\n    isLoggedIn:isLoggedIn\n}));\n }\n\n\n\n  render(){\n    if(this.state.isLoggedIn){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Welcome, {this.state.username}\n        <Controller username = {this.state.username} token = {this.state.token} />\n\n        <SubmitButton name = \"logout\" disabled = {false} onClick = {()=>this.logout()}/>\n      </header>\n    </div>\n  );\n} else{\n  return(\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <LoginForm updateState ={this.updateState}/>\n        <RegisterForm></RegisterForm>\n      </header>\n    </div>\n\n\n  )\n}\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}